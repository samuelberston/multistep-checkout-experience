class Form_1 extends React.Component {
  constructor(props) {
    super(props);
    this.state = {
      name: '',
      email: '',
      password: ''
    };
    this.handleChange = this.handleChange.bind(this);
    this.handleSubmit = this.handleSubmit.bind(this);
  }

  handleChange(event) {
    this.setState({
      [event.target.name]: event.target.value
    });
  }

  handleSubmit(event) {
    console.log('submit');
    event.preventDefault();
    this.setState({
      name: '',
      email: '',
      password: ''
    });
  }

  render() {
    return /*#__PURE__*/React.createElement("div", {
      className: "form-1"
    }, /*#__PURE__*/React.createElement("h1", null, "Sign Up"), /*#__PURE__*/React.createElement("form", {
      action: "/users",
      method: "post",
      onSubmit: this.handleSubmit
    }, /*#__PURE__*/React.createElement("p", null, "Enter your account information"), /*#__PURE__*/React.createElement("div", {
      className: "name"
    }, /*#__PURE__*/React.createElement("label", null, "Name", /*#__PURE__*/React.createElement("input", {
      type: "text",
      name: "name",
      id: "name",
      placeholder: "Full name",
      value: this.state.name,
      onChange: this.handleChange,
      required: true
    }))), /*#__PURE__*/React.createElement("div", {
      className: "email"
    }, /*#__PURE__*/React.createElement("label", null, "Email", /*#__PURE__*/React.createElement("input", {
      type: "email",
      name: "email",
      placeholder: "Email address",
      value: this.state.email,
      onChange: this.handleChange,
      required: true
    }))), /*#__PURE__*/React.createElement("div", {
      className: "password"
    }, /*#__PURE__*/React.createElement("label", null, "Password", /*#__PURE__*/React.createElement("input", {
      type: "password",
      name: "password",
      placeholder: "password",
      value: this.state.password,
      onChange: this.handleChange,
      required: true
    }))), /*#__PURE__*/React.createElement("button", {
      className: "nav"
    }, "Submit")));
  }

}

export default Form_1;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL2NsaWVudC9zcmMvY29tcG9uZW50cy9mb3JtLTEuanN4Il0sIm5hbWVzIjpbIkZvcm1fMSIsIlJlYWN0IiwiQ29tcG9uZW50IiwiY29uc3RydWN0b3IiLCJwcm9wcyIsInN0YXRlIiwibmFtZSIsImVtYWlsIiwicGFzc3dvcmQiLCJoYW5kbGVDaGFuZ2UiLCJiaW5kIiwiaGFuZGxlU3VibWl0IiwiZXZlbnQiLCJzZXRTdGF0ZSIsInRhcmdldCIsInZhbHVlIiwiY29uc29sZSIsImxvZyIsInByZXZlbnREZWZhdWx0IiwicmVuZGVyIl0sIm1hcHBpbmdzIjoiQUFBQSxNQUFNQSxNQUFOLFNBQXFCQyxLQUFLLENBQUNDLFNBQTNCLENBQXFDO0FBQ25DQyxFQUFBQSxXQUFXLENBQUNDLEtBQUQsRUFBUTtBQUNqQixVQUFNQSxLQUFOO0FBQ0EsU0FBS0MsS0FBTCxHQUFhO0FBQ1hDLE1BQUFBLElBQUksRUFBRSxFQURLO0FBRVhDLE1BQUFBLEtBQUssRUFBRSxFQUZJO0FBR1hDLE1BQUFBLFFBQVEsRUFBRTtBQUhDLEtBQWI7QUFLQSxTQUFLQyxZQUFMLEdBQW9CLEtBQUtBLFlBQUwsQ0FBa0JDLElBQWxCLENBQXVCLElBQXZCLENBQXBCO0FBQ0EsU0FBS0MsWUFBTCxHQUFvQixLQUFLQSxZQUFMLENBQWtCRCxJQUFsQixDQUF1QixJQUF2QixDQUFwQjtBQUNEOztBQUVERCxFQUFBQSxZQUFZLENBQUNHLEtBQUQsRUFBUTtBQUNsQixTQUFLQyxRQUFMLENBQWM7QUFDWixPQUFDRCxLQUFLLENBQUNFLE1BQU4sQ0FBYVIsSUFBZCxHQUFxQk0sS0FBSyxDQUFDRSxNQUFOLENBQWFDO0FBRHRCLEtBQWQ7QUFHRDs7QUFFREosRUFBQUEsWUFBWSxDQUFDQyxLQUFELEVBQVE7QUFDbEJJLElBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLFFBQVo7QUFDQUwsSUFBQUEsS0FBSyxDQUFDTSxjQUFOO0FBRUEsU0FBS0wsUUFBTCxDQUFjO0FBQ1pQLE1BQUFBLElBQUksRUFBRSxFQURNO0FBRVpDLE1BQUFBLEtBQUssRUFBRSxFQUZLO0FBR1pDLE1BQUFBLFFBQVEsRUFBRTtBQUhFLEtBQWQ7QUFLRDs7QUFFRFcsRUFBQUEsTUFBTSxHQUFHO0FBQ1Asd0JBQ0U7QUFBSyxNQUFBLFNBQVMsRUFBQztBQUFmLG9CQUNFLDBDQURGLGVBRUU7QUFBTSxNQUFBLE1BQU0sRUFBQyxRQUFiO0FBQXNCLE1BQUEsTUFBTSxFQUFDLE1BQTdCO0FBQW9DLE1BQUEsUUFBUSxFQUFFLEtBQUtSO0FBQW5ELG9CQUNBLGdFQURBLGVBRUU7QUFBSyxNQUFBLFNBQVMsRUFBQztBQUFmLG9CQUNFLHdEQUVFO0FBQU8sTUFBQSxJQUFJLEVBQUMsTUFBWjtBQUFtQixNQUFBLElBQUksRUFBQyxNQUF4QjtBQUE4QixNQUFBLEVBQUUsRUFBQyxNQUFqQztBQUF3QyxNQUFBLFdBQVcsRUFBQyxXQUFwRDtBQUFnRSxNQUFBLEtBQUssRUFBRSxLQUFLTixLQUFMLENBQVdDLElBQWxGO0FBQXVGLE1BQUEsUUFBUSxFQUFFLEtBQUtHLFlBQXRHO0FBQW9ILE1BQUEsUUFBUTtBQUE1SCxNQUZGLENBREYsQ0FGRixlQVFFO0FBQUssTUFBQSxTQUFTLEVBQUM7QUFBZixvQkFDRSx5REFFRTtBQUFPLE1BQUEsSUFBSSxFQUFDLE9BQVo7QUFBb0IsTUFBQSxJQUFJLEVBQUMsT0FBekI7QUFBaUMsTUFBQSxXQUFXLEVBQUMsZUFBN0M7QUFBNkQsTUFBQSxLQUFLLEVBQUUsS0FBS0osS0FBTCxDQUFXRSxLQUEvRTtBQUFzRixNQUFBLFFBQVEsRUFBRSxLQUFLRSxZQUFyRztBQUFtSCxNQUFBLFFBQVE7QUFBM0gsTUFGRixDQURGLENBUkYsZUFjRTtBQUFLLE1BQUEsU0FBUyxFQUFDO0FBQWYsb0JBQ0UsNERBRUU7QUFBTyxNQUFBLElBQUksRUFBQyxVQUFaO0FBQXVCLE1BQUEsSUFBSSxFQUFDLFVBQTVCO0FBQXVDLE1BQUEsV0FBVyxFQUFDLFVBQW5EO0FBQThELE1BQUEsS0FBSyxFQUFFLEtBQUtKLEtBQUwsQ0FBV0csUUFBaEY7QUFBMEYsTUFBQSxRQUFRLEVBQUUsS0FBS0MsWUFBekc7QUFBdUgsTUFBQSxRQUFRO0FBQS9ILE1BRkYsQ0FERixDQWRGLGVBb0JBO0FBQVEsTUFBQSxTQUFTLEVBQUM7QUFBbEIsZ0JBcEJBLENBRkYsQ0FERjtBQTJCRDs7QUF6RGtDOztBQTREckMsZUFBZVQsTUFBZiIsInNvdXJjZXNDb250ZW50IjpbImNsYXNzIEZvcm1fMSBleHRlbmRzIFJlYWN0LkNvbXBvbmVudCB7XG4gIGNvbnN0cnVjdG9yKHByb3BzKSB7XG4gICAgc3VwZXIocHJvcHMpO1xuICAgIHRoaXMuc3RhdGUgPSB7XG4gICAgICBuYW1lOiAnJyxcbiAgICAgIGVtYWlsOiAnJyxcbiAgICAgIHBhc3N3b3JkOiAnJ1xuICAgIH07XG4gICAgdGhpcy5oYW5kbGVDaGFuZ2UgPSB0aGlzLmhhbmRsZUNoYW5nZS5iaW5kKHRoaXMpO1xuICAgIHRoaXMuaGFuZGxlU3VibWl0ID0gdGhpcy5oYW5kbGVTdWJtaXQuYmluZCh0aGlzKTtcbiAgfVxuXG4gIGhhbmRsZUNoYW5nZShldmVudCkge1xuICAgIHRoaXMuc2V0U3RhdGUoe1xuICAgICAgW2V2ZW50LnRhcmdldC5uYW1lXTogZXZlbnQudGFyZ2V0LnZhbHVlXG4gICAgfSk7XG4gIH1cblxuICBoYW5kbGVTdWJtaXQoZXZlbnQpIHtcbiAgICBjb25zb2xlLmxvZygnc3VibWl0Jyk7XG4gICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcbiAgICBcbiAgICB0aGlzLnNldFN0YXRlKHtcbiAgICAgIG5hbWU6ICcnLFxuICAgICAgZW1haWw6ICcnLFxuICAgICAgcGFzc3dvcmQ6ICcnXG4gICAgfSk7XG4gIH1cblxuICByZW5kZXIoKSB7XG4gICAgcmV0dXJuKFxuICAgICAgPGRpdiBjbGFzc05hbWU9XCJmb3JtLTFcIj5cbiAgICAgICAgPGgxPlNpZ24gVXA8L2gxPlxuICAgICAgICA8Zm9ybSBhY3Rpb249XCIvdXNlcnNcIiBtZXRob2Q9XCJwb3N0XCIgb25TdWJtaXQ9e3RoaXMuaGFuZGxlU3VibWl0fT5cbiAgICAgICAgPHA+RW50ZXIgeW91ciBhY2NvdW50IGluZm9ybWF0aW9uPC9wPlxuICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwibmFtZVwiPlxuICAgICAgICAgICAgPGxhYmVsID5cbiAgICAgICAgICAgICAgTmFtZVxuICAgICAgICAgICAgICA8aW5wdXQgdHlwZT1cInRleHRcIiBuYW1lPVwibmFtZVwiaWQ9XCJuYW1lXCIgcGxhY2Vob2xkZXI9XCJGdWxsIG5hbWVcIiB2YWx1ZT17dGhpcy5zdGF0ZS5uYW1lfW9uQ2hhbmdlPXt0aGlzLmhhbmRsZUNoYW5nZX0gcmVxdWlyZWQgLz5cbiAgICAgICAgICAgIDwvbGFiZWw+XG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJlbWFpbFwiPlxuICAgICAgICAgICAgPGxhYmVsID5cbiAgICAgICAgICAgICAgRW1haWxcbiAgICAgICAgICAgICAgPGlucHV0IHR5cGU9XCJlbWFpbFwiIG5hbWU9XCJlbWFpbFwiIHBsYWNlaG9sZGVyPVwiRW1haWwgYWRkcmVzc1wiIHZhbHVlPXt0aGlzLnN0YXRlLmVtYWlsfSBvbkNoYW5nZT17dGhpcy5oYW5kbGVDaGFuZ2V9IHJlcXVpcmVkIC8+XG4gICAgICAgICAgICA8L2xhYmVsPlxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwicGFzc3dvcmRcIj5cbiAgICAgICAgICAgIDxsYWJlbCA+XG4gICAgICAgICAgICAgIFBhc3N3b3JkXG4gICAgICAgICAgICAgIDxpbnB1dCB0eXBlPVwicGFzc3dvcmRcIiBuYW1lPVwicGFzc3dvcmRcIiBwbGFjZWhvbGRlcj1cInBhc3N3b3JkXCIgdmFsdWU9e3RoaXMuc3RhdGUucGFzc3dvcmR9IG9uQ2hhbmdlPXt0aGlzLmhhbmRsZUNoYW5nZX0gcmVxdWlyZWQgLz5cbiAgICAgICAgICAgIDwvbGFiZWw+XG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgIDxidXR0b24gY2xhc3NOYW1lPVwibmF2XCI+U3VibWl0PC9idXR0b24+XG4gICAgICAgIDwvZm9ybT5cbiAgICAgIDwvZGl2PlxuICAgIClcbiAgfVxufVxuXG5leHBvcnQgZGVmYXVsdCBGb3JtXzE7Il19