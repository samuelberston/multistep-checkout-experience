import Checkout from './checkout.js';
import Form_1 from './form-1.js';
import Form_2 from './form-2.js';
import Form_3 from './form-3.js';
import Confirmation from './confirmation.js';

class App extends React.Component {
  constructor() {
    super();
    this.state = {
      current: 0
    };
    this.onNextClick = this.onNextClick.bind(this);
    this.onPrevClick = this.onPrevClick.bind(this);
    this.onFormSubmit = this.onFormSubmit.bind(this);
    this.onCheckoutClick = this.onCheckoutClick.bind(this);
    this.Render = this.Render.bind(this);
  }

  onNextClick() {
    if (this.state.current < 4) {
      console.log('click');
      this.setState({
        current: this.state.current + 1
      });
    }
  }

  onPrevClick() {
    console.log('click');

    if (this.state.current > 0) {
      this.setState({
        current: this.state.current - 1
      });
    }
  }

  onCheckoutClick() {
    this.setState({
      current: this.state.current + 1
    });
  }

  onFormSubmit(e) {
    e.preventDefault();
  }

  Render(props) {
    const current = this.state.current;
    console.log(current);

    if (current === 0) {
      return /*#__PURE__*/React.createElement(Checkout, {
        onClick: this.onCheckoutClick
      });
    } else if (current === 1) {
      return /*#__PURE__*/React.createElement(Form_1, {
        onFormSubmit: this.onFormSubmit
      });
    } else if (current === 2) {
      return /*#__PURE__*/React.createElement(Form_2, {
        onFormSubmit: this.onFormSubmit
      });
    } else if (current === 3) {
      return /*#__PURE__*/React.createElement(Form_3, {
        onFormSubmit: this.onFormSubmit
      });
    } else if (current === 4) {
      return /*#__PURE__*/React.createElement(Confirmation, null);
    }
  }

  render() {
    return /*#__PURE__*/React.createElement("div", {
      className: "app"
    }, /*#__PURE__*/React.createElement("h1", null, "Checkout"), this.Render(), /*#__PURE__*/React.createElement("button", {
      className: "next nav",
      onClick: this.onNextClick
    }, "Next"), /*#__PURE__*/React.createElement("button", {
      className: "prev nav",
      onClick: this.onPrevClick
    }, "Previous"));
  }

}

export default App;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL2NsaWVudC9zcmMvY29tcG9uZW50cy9hcHAuanN4Il0sIm5hbWVzIjpbIkNoZWNrb3V0IiwiRm9ybV8xIiwiRm9ybV8yIiwiRm9ybV8zIiwiQ29uZmlybWF0aW9uIiwiQXBwIiwiUmVhY3QiLCJDb21wb25lbnQiLCJjb25zdHJ1Y3RvciIsInN0YXRlIiwiY3VycmVudCIsIm9uTmV4dENsaWNrIiwiYmluZCIsIm9uUHJldkNsaWNrIiwib25Gb3JtU3VibWl0Iiwib25DaGVja291dENsaWNrIiwiUmVuZGVyIiwiY29uc29sZSIsImxvZyIsInNldFN0YXRlIiwiZSIsInByZXZlbnREZWZhdWx0IiwicHJvcHMiLCJyZW5kZXIiXSwibWFwcGluZ3MiOiJBQUFBLE9BQU9BLFFBQVAsTUFBcUIsZUFBckI7QUFDQSxPQUFPQyxNQUFQLE1BQW1CLGFBQW5CO0FBQ0EsT0FBT0MsTUFBUCxNQUFtQixhQUFuQjtBQUNBLE9BQU9DLE1BQVAsTUFBbUIsYUFBbkI7QUFDQSxPQUFPQyxZQUFQLE1BQXlCLG1CQUF6Qjs7QUFFQSxNQUFNQyxHQUFOLFNBQWtCQyxLQUFLLENBQUNDLFNBQXhCLENBQWtDO0FBQ2hDQyxFQUFBQSxXQUFXLEdBQUk7QUFDYjtBQUNBLFNBQUtDLEtBQUwsR0FBYTtBQUNYQyxNQUFBQSxPQUFPLEVBQUU7QUFERSxLQUFiO0FBR0EsU0FBS0MsV0FBTCxHQUFtQixLQUFLQSxXQUFMLENBQWlCQyxJQUFqQixDQUFzQixJQUF0QixDQUFuQjtBQUNBLFNBQUtDLFdBQUwsR0FBbUIsS0FBS0EsV0FBTCxDQUFpQkQsSUFBakIsQ0FBc0IsSUFBdEIsQ0FBbkI7QUFDQSxTQUFLRSxZQUFMLEdBQW9CLEtBQUtBLFlBQUwsQ0FBa0JGLElBQWxCLENBQXVCLElBQXZCLENBQXBCO0FBQ0EsU0FBS0csZUFBTCxHQUF1QixLQUFLQSxlQUFMLENBQXFCSCxJQUFyQixDQUEwQixJQUExQixDQUF2QjtBQUNBLFNBQUtJLE1BQUwsR0FBYyxLQUFLQSxNQUFMLENBQVlKLElBQVosQ0FBaUIsSUFBakIsQ0FBZDtBQUNEOztBQUVERCxFQUFBQSxXQUFXLEdBQUc7QUFDWixRQUFJLEtBQUtGLEtBQUwsQ0FBV0MsT0FBWCxHQUFxQixDQUF6QixFQUE0QjtBQUMxQk8sTUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVksT0FBWjtBQUNBLFdBQUtDLFFBQUwsQ0FBYztBQUNaVCxRQUFBQSxPQUFPLEVBQUUsS0FBS0QsS0FBTCxDQUFXQyxPQUFYLEdBQXFCO0FBRGxCLE9BQWQ7QUFHRDtBQUNGOztBQUVERyxFQUFBQSxXQUFXLEdBQUc7QUFDWkksSUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVksT0FBWjs7QUFDQSxRQUFJLEtBQUtULEtBQUwsQ0FBV0MsT0FBWCxHQUFxQixDQUF6QixFQUE0QjtBQUMxQixXQUFLUyxRQUFMLENBQWM7QUFDWlQsUUFBQUEsT0FBTyxFQUFFLEtBQUtELEtBQUwsQ0FBV0MsT0FBWCxHQUFxQjtBQURsQixPQUFkO0FBR0Q7QUFDRjs7QUFFREssRUFBQUEsZUFBZSxHQUFHO0FBQ2hCLFNBQUtJLFFBQUwsQ0FBYztBQUNaVCxNQUFBQSxPQUFPLEVBQUUsS0FBS0QsS0FBTCxDQUFXQyxPQUFYLEdBQXFCO0FBRGxCLEtBQWQ7QUFHRDs7QUFFREksRUFBQUEsWUFBWSxDQUFDTSxDQUFELEVBQUk7QUFDZEEsSUFBQUEsQ0FBQyxDQUFDQyxjQUFGO0FBQ0Q7O0FBRURMLEVBQUFBLE1BQU0sQ0FBQ00sS0FBRCxFQUFRO0FBQ1osVUFBTVosT0FBTyxHQUFHLEtBQUtELEtBQUwsQ0FBV0MsT0FBM0I7QUFDQU8sSUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVlSLE9BQVo7O0FBQ0EsUUFBSUEsT0FBTyxLQUFLLENBQWhCLEVBQW1CO0FBQ2pCLDBCQUFPLG9CQUFDLFFBQUQ7QUFBVSxRQUFBLE9BQU8sRUFBRSxLQUFLSztBQUF4QixRQUFQO0FBQ0QsS0FGRCxNQUVPLElBQUlMLE9BQU8sS0FBSyxDQUFoQixFQUFtQjtBQUN4QiwwQkFBTyxvQkFBQyxNQUFEO0FBQVEsUUFBQSxZQUFZLEVBQUUsS0FBS0k7QUFBM0IsUUFBUDtBQUNELEtBRk0sTUFFQSxJQUFJSixPQUFPLEtBQUssQ0FBaEIsRUFBbUI7QUFDeEIsMEJBQU8sb0JBQUMsTUFBRDtBQUFRLFFBQUEsWUFBWSxFQUFFLEtBQUtJO0FBQTNCLFFBQVA7QUFDRCxLQUZNLE1BRUEsSUFBSUosT0FBTyxLQUFLLENBQWhCLEVBQW1CO0FBQ3hCLDBCQUFPLG9CQUFDLE1BQUQ7QUFBUSxRQUFBLFlBQVksRUFBRSxLQUFLSTtBQUEzQixRQUFQO0FBQ0QsS0FGTSxNQUVBLElBQUlKLE9BQU8sS0FBSyxDQUFoQixFQUFtQjtBQUN4QiwwQkFBTyxvQkFBQyxZQUFELE9BQVA7QUFDRDtBQUNGOztBQUVEYSxFQUFBQSxNQUFNLEdBQUc7QUFDUCx3QkFDRTtBQUFLLE1BQUEsU0FBUyxFQUFDO0FBQWYsb0JBQ0UsMkNBREYsRUFFRyxLQUFLUCxNQUFMLEVBRkgsZUFHRTtBQUFRLE1BQUEsU0FBUyxFQUFDLFVBQWxCO0FBQTZCLE1BQUEsT0FBTyxFQUFFLEtBQUtMO0FBQTNDLGNBSEYsZUFJRTtBQUFRLE1BQUEsU0FBUyxFQUFDLFVBQWxCO0FBQTZCLE1BQUEsT0FBTyxFQUFFLEtBQUtFO0FBQTNDLGtCQUpGLENBREY7QUFRRDs7QUFsRStCOztBQXFFbEMsZUFBZVIsR0FBZiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBDaGVja291dCBmcm9tICcuL2NoZWNrb3V0LmpzJztcbmltcG9ydCBGb3JtXzEgZnJvbSAnLi9mb3JtLTEuanMnO1xuaW1wb3J0IEZvcm1fMiBmcm9tICcuL2Zvcm0tMi5qcyc7XG5pbXBvcnQgRm9ybV8zIGZyb20gJy4vZm9ybS0zLmpzJztcbmltcG9ydCBDb25maXJtYXRpb24gZnJvbSAnLi9jb25maXJtYXRpb24uanMnO1xuXG5jbGFzcyBBcHAgZXh0ZW5kcyBSZWFjdC5Db21wb25lbnQge1xuICBjb25zdHJ1Y3RvciAoKSB7XG4gICAgc3VwZXIoKTtcbiAgICB0aGlzLnN0YXRlID0ge1xuICAgICAgY3VycmVudDogMFxuICAgIH07XG4gICAgdGhpcy5vbk5leHRDbGljayA9IHRoaXMub25OZXh0Q2xpY2suYmluZCh0aGlzKTtcbiAgICB0aGlzLm9uUHJldkNsaWNrID0gdGhpcy5vblByZXZDbGljay5iaW5kKHRoaXMpO1xuICAgIHRoaXMub25Gb3JtU3VibWl0ID0gdGhpcy5vbkZvcm1TdWJtaXQuYmluZCh0aGlzKTtcbiAgICB0aGlzLm9uQ2hlY2tvdXRDbGljayA9IHRoaXMub25DaGVja291dENsaWNrLmJpbmQodGhpcyk7XG4gICAgdGhpcy5SZW5kZXIgPSB0aGlzLlJlbmRlci5iaW5kKHRoaXMpO1xuICB9XG5cbiAgb25OZXh0Q2xpY2soKSB7XG4gICAgaWYgKHRoaXMuc3RhdGUuY3VycmVudCA8IDQpIHtcbiAgICAgIGNvbnNvbGUubG9nKCdjbGljaycpO1xuICAgICAgdGhpcy5zZXRTdGF0ZSh7XG4gICAgICAgIGN1cnJlbnQ6IHRoaXMuc3RhdGUuY3VycmVudCArIDFcbiAgICAgIH0pXG4gICAgfVxuICB9XG5cbiAgb25QcmV2Q2xpY2soKSB7XG4gICAgY29uc29sZS5sb2coJ2NsaWNrJyk7XG4gICAgaWYgKHRoaXMuc3RhdGUuY3VycmVudCA+IDApIHtcbiAgICAgIHRoaXMuc2V0U3RhdGUoe1xuICAgICAgICBjdXJyZW50OiB0aGlzLnN0YXRlLmN1cnJlbnQgLSAxXG4gICAgICB9KVxuICAgIH1cbiAgfVxuXG4gIG9uQ2hlY2tvdXRDbGljaygpIHtcbiAgICB0aGlzLnNldFN0YXRlKHtcbiAgICAgIGN1cnJlbnQ6IHRoaXMuc3RhdGUuY3VycmVudCArIDFcbiAgICB9KVxuICB9XG5cbiAgb25Gb3JtU3VibWl0KGUpIHtcbiAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gIH1cblxuICBSZW5kZXIocHJvcHMpIHtcbiAgICBjb25zdCBjdXJyZW50ID0gdGhpcy5zdGF0ZS5jdXJyZW50XG4gICAgY29uc29sZS5sb2coY3VycmVudCk7XG4gICAgaWYgKGN1cnJlbnQgPT09IDApIHtcbiAgICAgIHJldHVybiA8Q2hlY2tvdXQgb25DbGljaz17dGhpcy5vbkNoZWNrb3V0Q2xpY2t9Lz5cbiAgICB9IGVsc2UgaWYgKGN1cnJlbnQgPT09IDEpIHtcbiAgICAgIHJldHVybiA8Rm9ybV8xIG9uRm9ybVN1Ym1pdD17dGhpcy5vbkZvcm1TdWJtaXR9Lz5cbiAgICB9IGVsc2UgaWYgKGN1cnJlbnQgPT09IDIpIHtcbiAgICAgIHJldHVybiA8Rm9ybV8yIG9uRm9ybVN1Ym1pdD17dGhpcy5vbkZvcm1TdWJtaXR9Lz5cbiAgICB9IGVsc2UgaWYgKGN1cnJlbnQgPT09IDMpIHtcbiAgICAgIHJldHVybiA8Rm9ybV8zIG9uRm9ybVN1Ym1pdD17dGhpcy5vbkZvcm1TdWJtaXR9Lz5cbiAgICB9IGVsc2UgaWYgKGN1cnJlbnQgPT09IDQpIHtcbiAgICAgIHJldHVybiA8Q29uZmlybWF0aW9uIC8+XG4gICAgfVxuICB9XG5cbiAgcmVuZGVyKCkge1xuICAgIHJldHVybiAoXG4gICAgICA8ZGl2IGNsYXNzTmFtZT1cImFwcFwiPlxuICAgICAgICA8aDE+Q2hlY2tvdXQ8L2gxPlxuICAgICAgICB7dGhpcy5SZW5kZXIoKX1cbiAgICAgICAgPGJ1dHRvbiBjbGFzc05hbWU9XCJuZXh0IG5hdlwiIG9uQ2xpY2s9e3RoaXMub25OZXh0Q2xpY2t9Pk5leHQ8L2J1dHRvbj5cbiAgICAgICAgPGJ1dHRvbiBjbGFzc05hbWU9XCJwcmV2IG5hdlwiIG9uQ2xpY2s9e3RoaXMub25QcmV2Q2xpY2t9PlByZXZpb3VzPC9idXR0b24+XG4gICAgICA8L2Rpdj5cbiAgICApO1xuICB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IEFwcDsiXX0=