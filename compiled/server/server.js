const express = require('express');

const app = express();
const port = 3000;

const path = require('path');

const bodyParser = require('body-parser');

const db = require('../db/connection.js');

app.use(express.static('/../index.html')); // const logger = (request, response, next) => {
//   console.log(`Receiving request to ${request.url} with method ${request.method}`)
//   next();l
// }
// app.use('/', logger);

app.use(bodyParser.urlencoded({
  extended: false
}));
app.use(bodyParser.json());
app.post('/users', function (req, res) {
  console.log('in server', req.body); // console.log('res: ', res);
  // const query = `INSERT INTO users (name, email, password) VALUES ('${req.body.name}', '${req.body.email}', '${req.body.password}')`;
  // db.query(query, (err, result) => {
  //   if (err) { throw err; }
  //   console.log(result);
  // })
});
app.post('/shipping', function (req, res) {
  const query = `INSERT INTO shippingInfo (address1, address2, city, state, zipCode) VALUES ('${req.body.address1}', '${req.body.address2}', '${req.body.city}', '${req.body.state}', ${req.body.zip})`;
  db.query(query, (err, result) => {
    if (err) {
      throw err;
    }

    console.log(result);
  });
});
app.listen(port, () => {
  console.log(`Listening on ${port}`);
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NlcnZlci9zZXJ2ZXIuanMiXSwibmFtZXMiOlsiZXhwcmVzcyIsInJlcXVpcmUiLCJhcHAiLCJwb3J0IiwicGF0aCIsImJvZHlQYXJzZXIiLCJkYiIsInVzZSIsInN0YXRpYyIsInVybGVuY29kZWQiLCJleHRlbmRlZCIsImpzb24iLCJwb3N0IiwicmVxIiwicmVzIiwiY29uc29sZSIsImxvZyIsImJvZHkiLCJxdWVyeSIsImFkZHJlc3MxIiwiYWRkcmVzczIiLCJjaXR5Iiwic3RhdGUiLCJ6aXAiLCJlcnIiLCJyZXN1bHQiLCJsaXN0ZW4iXSwibWFwcGluZ3MiOiJBQUFBLE1BQU1BLE9BQU8sR0FBR0MsT0FBTyxDQUFDLFNBQUQsQ0FBdkI7O0FBQ0EsTUFBTUMsR0FBRyxHQUFHRixPQUFPLEVBQW5CO0FBQ0EsTUFBTUcsSUFBSSxHQUFHLElBQWI7O0FBQ0EsTUFBTUMsSUFBSSxHQUFHSCxPQUFPLENBQUMsTUFBRCxDQUFwQjs7QUFDQSxNQUFNSSxVQUFVLEdBQUdKLE9BQU8sQ0FBQyxhQUFELENBQTFCOztBQUVBLE1BQU1LLEVBQUUsR0FBR0wsT0FBTyxDQUFDLHFCQUFELENBQWxCOztBQUVBQyxHQUFHLENBQUNLLEdBQUosQ0FBUVAsT0FBTyxDQUFDUSxNQUFSLENBQWUsZ0JBQWYsQ0FBUixFLENBRUE7QUFDQTtBQUNBO0FBQ0E7QUFFQTs7QUFFQU4sR0FBRyxDQUFDSyxHQUFKLENBQVFGLFVBQVUsQ0FBQ0ksVUFBWCxDQUFzQjtBQUFFQyxFQUFBQSxRQUFRLEVBQUU7QUFBWixDQUF0QixDQUFSO0FBQ0FSLEdBQUcsQ0FBQ0ssR0FBSixDQUFRRixVQUFVLENBQUNNLElBQVgsRUFBUjtBQUVBVCxHQUFHLENBQUNVLElBQUosQ0FBUyxRQUFULEVBQW1CLFVBQVNDLEdBQVQsRUFBY0MsR0FBZCxFQUFtQjtBQUNsQ0MsRUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVksV0FBWixFQUF5QkgsR0FBRyxDQUFDSSxJQUE3QixFQURrQyxDQUVsQztBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDSCxDQVREO0FBV0FmLEdBQUcsQ0FBQ1UsSUFBSixDQUFTLFdBQVQsRUFBc0IsVUFBU0MsR0FBVCxFQUFjQyxHQUFkLEVBQW1CO0FBQ3ZDLFFBQU1JLEtBQUssR0FBSSxnRkFBK0VMLEdBQUcsQ0FBQ0ksSUFBSixDQUFTRSxRQUFTLE9BQU1OLEdBQUcsQ0FBQ0ksSUFBSixDQUFTRyxRQUFTLE9BQU1QLEdBQUcsQ0FBQ0ksSUFBSixDQUFTSSxJQUFLLE9BQU1SLEdBQUcsQ0FBQ0ksSUFBSixDQUFTSyxLQUFNLE1BQUtULEdBQUcsQ0FBQ0ksSUFBSixDQUFTTSxHQUFJLEdBQW5NO0FBQ0FqQixFQUFBQSxFQUFFLENBQUNZLEtBQUgsQ0FBU0EsS0FBVCxFQUFnQixDQUFDTSxHQUFELEVBQU1DLE1BQU4sS0FBaUI7QUFDL0IsUUFBR0QsR0FBSCxFQUFRO0FBQUUsWUFBTUEsR0FBTjtBQUFZOztBQUN0QlQsSUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVlTLE1BQVo7QUFDRCxHQUhEO0FBSUQsQ0FORDtBQVFBdkIsR0FBRyxDQUFDd0IsTUFBSixDQUFXdkIsSUFBWCxFQUFpQixNQUFNO0FBQ3JCWSxFQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBYSxnQkFBZWIsSUFBSyxFQUFqQztBQUNELENBRkQiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBleHByZXNzID0gcmVxdWlyZSgnZXhwcmVzcycpO1xuY29uc3QgYXBwID0gZXhwcmVzcygpO1xuY29uc3QgcG9ydCA9IDMwMDA7XG5jb25zdCBwYXRoID0gcmVxdWlyZSgncGF0aCcpO1xuY29uc3QgYm9keVBhcnNlciA9IHJlcXVpcmUoJ2JvZHktcGFyc2VyJyk7XG5cbmNvbnN0IGRiID0gcmVxdWlyZSgnLi4vZGIvY29ubmVjdGlvbi5qcycpO1xuXG5hcHAudXNlKGV4cHJlc3Muc3RhdGljKCcvLi4vaW5kZXguaHRtbCcpKTtcblxuLy8gY29uc3QgbG9nZ2VyID0gKHJlcXVlc3QsIHJlc3BvbnNlLCBuZXh0KSA9PiB7XG4vLyAgIGNvbnNvbGUubG9nKGBSZWNlaXZpbmcgcmVxdWVzdCB0byAke3JlcXVlc3QudXJsfSB3aXRoIG1ldGhvZCAke3JlcXVlc3QubWV0aG9kfWApXG4vLyAgIG5leHQoKTtsXG4vLyB9XG5cbi8vIGFwcC51c2UoJy8nLCBsb2dnZXIpO1xuXG5hcHAudXNlKGJvZHlQYXJzZXIudXJsZW5jb2RlZCh7IGV4dGVuZGVkOiBmYWxzZSB9KSk7XG5hcHAudXNlKGJvZHlQYXJzZXIuanNvbigpKTtcblxuYXBwLnBvc3QoJy91c2VycycsIGZ1bmN0aW9uKHJlcSwgcmVzKSB7XG4gICAgY29uc29sZS5sb2coJ2luIHNlcnZlcicsIHJlcS5ib2R5KTtcbiAgICAvLyBjb25zb2xlLmxvZygncmVzOiAnLCByZXMpO1xuICAgIC8vIGNvbnN0IHF1ZXJ5ID0gYElOU0VSVCBJTlRPIHVzZXJzIChuYW1lLCBlbWFpbCwgcGFzc3dvcmQpIFZBTFVFUyAoJyR7cmVxLmJvZHkubmFtZX0nLCAnJHtyZXEuYm9keS5lbWFpbH0nLCAnJHtyZXEuYm9keS5wYXNzd29yZH0nKWA7XG5cbiAgICAvLyBkYi5xdWVyeShxdWVyeSwgKGVyciwgcmVzdWx0KSA9PiB7XG4gICAgLy8gICBpZiAoZXJyKSB7IHRocm93IGVycjsgfVxuICAgIC8vICAgY29uc29sZS5sb2cocmVzdWx0KTtcbiAgICAvLyB9KVxufSlcblxuYXBwLnBvc3QoJy9zaGlwcGluZycsIGZ1bmN0aW9uKHJlcSwgcmVzKSB7XG4gIGNvbnN0IHF1ZXJ5ID0gYElOU0VSVCBJTlRPIHNoaXBwaW5nSW5mbyAoYWRkcmVzczEsIGFkZHJlc3MyLCBjaXR5LCBzdGF0ZSwgemlwQ29kZSkgVkFMVUVTICgnJHtyZXEuYm9keS5hZGRyZXNzMX0nLCAnJHtyZXEuYm9keS5hZGRyZXNzMn0nLCAnJHtyZXEuYm9keS5jaXR5fScsICcke3JlcS5ib2R5LnN0YXRlfScsICR7cmVxLmJvZHkuemlwfSlgXG4gIGRiLnF1ZXJ5KHF1ZXJ5LCAoZXJyLCByZXN1bHQpID0+IHtcbiAgICBpZihlcnIpIHsgdGhyb3cgZXJyOyB9XG4gICAgY29uc29sZS5sb2cocmVzdWx0KTtcbiAgfSlcbn0pXG5cbmFwcC5saXN0ZW4ocG9ydCwgKCkgPT4ge1xuICBjb25zb2xlLmxvZyhgTGlzdGVuaW5nIG9uICR7cG9ydH1gKVxufSkiXX0=