const express = require('express');

const app = express();
const port = 3000;

const path = require('path');

const db = require('../db/connection.js');

app.use(express.static('client'));

const logger = (request, response, next) => {
  console.log(`Receiving request to ${request.url} with method ${request.method}`);
  next();
};

app.use('/', logger);
app.post('/users', function (req, res) {
  console.log('req: ', req);
  console.log('res: ', res);
  const query = `INSERT INTO users (name, email, password) VALUES ('${req.body.name}', '${req.body.email}', '${req.body.password}')`;
  db.query(query, (err, result) => {
    if (err) {
      throw err;
    }

    console.log(result);
  });
});
app.post('/shipping', function (req, res) {
  const query = `INSERT INTO shippingInfo (address1, address2, city, state, zipCode) VALUES ('${req.body.address1}', '${req.body.address2}', '${req.body.city}', '${req.body.state}', ${req.body.zip})`;
  db.query(query, (err, result) => {
    if (err) {
      throw err;
    }

    console.log(result);
  });
});
app.listen(port, () => {
  console.log(`Listening on ${port}`);
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NlcnZlci9zZXJ2ZXIuanMiXSwibmFtZXMiOlsiZXhwcmVzcyIsInJlcXVpcmUiLCJhcHAiLCJwb3J0IiwicGF0aCIsImRiIiwidXNlIiwic3RhdGljIiwibG9nZ2VyIiwicmVxdWVzdCIsInJlc3BvbnNlIiwibmV4dCIsImNvbnNvbGUiLCJsb2ciLCJ1cmwiLCJtZXRob2QiLCJwb3N0IiwicmVxIiwicmVzIiwicXVlcnkiLCJib2R5IiwibmFtZSIsImVtYWlsIiwicGFzc3dvcmQiLCJlcnIiLCJyZXN1bHQiLCJhZGRyZXNzMSIsImFkZHJlc3MyIiwiY2l0eSIsInN0YXRlIiwiemlwIiwibGlzdGVuIl0sIm1hcHBpbmdzIjoiQUFBQSxNQUFNQSxPQUFPLEdBQUdDLE9BQU8sQ0FBQyxTQUFELENBQXZCOztBQUNBLE1BQU1DLEdBQUcsR0FBR0YsT0FBTyxFQUFuQjtBQUNBLE1BQU1HLElBQUksR0FBRyxJQUFiOztBQUNBLE1BQU1DLElBQUksR0FBR0gsT0FBTyxDQUFDLE1BQUQsQ0FBcEI7O0FBRUEsTUFBTUksRUFBRSxHQUFHSixPQUFPLENBQUMscUJBQUQsQ0FBbEI7O0FBRUFDLEdBQUcsQ0FBQ0ksR0FBSixDQUFRTixPQUFPLENBQUNPLE1BQVIsQ0FBZSxRQUFmLENBQVI7O0FBRUEsTUFBTUMsTUFBTSxHQUFHLENBQUNDLE9BQUQsRUFBVUMsUUFBVixFQUFvQkMsSUFBcEIsS0FBNkI7QUFDMUNDLEVBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFhLHdCQUF1QkosT0FBTyxDQUFDSyxHQUFJLGdCQUFlTCxPQUFPLENBQUNNLE1BQU8sRUFBOUU7QUFDQUosRUFBQUEsSUFBSTtBQUNMLENBSEQ7O0FBS0FULEdBQUcsQ0FBQ0ksR0FBSixDQUFRLEdBQVIsRUFBYUUsTUFBYjtBQUdBTixHQUFHLENBQUNjLElBQUosQ0FBUyxRQUFULEVBQ0UsVUFBU0MsR0FBVCxFQUFjQyxHQUFkLEVBQW1CO0FBQ2pCTixFQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWSxPQUFaLEVBQXFCSSxHQUFyQjtBQUNBTCxFQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWSxPQUFaLEVBQXFCSyxHQUFyQjtBQUNBLFFBQU1DLEtBQUssR0FBSSxzREFBcURGLEdBQUcsQ0FBQ0csSUFBSixDQUFTQyxJQUFLLE9BQU1KLEdBQUcsQ0FBQ0csSUFBSixDQUFTRSxLQUFNLE9BQU1MLEdBQUcsQ0FBQ0csSUFBSixDQUFTRyxRQUFTLElBQS9IO0FBRUFsQixFQUFBQSxFQUFFLENBQUNjLEtBQUgsQ0FBU0EsS0FBVCxFQUFnQixDQUFDSyxHQUFELEVBQU1DLE1BQU4sS0FBaUI7QUFDL0IsUUFBSUQsR0FBSixFQUFTO0FBQUUsWUFBTUEsR0FBTjtBQUFZOztBQUN2QlosSUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVlZLE1BQVo7QUFDRCxHQUhEO0FBSUgsQ0FWRDtBQVlBdkIsR0FBRyxDQUFDYyxJQUFKLENBQVMsV0FBVCxFQUFzQixVQUFTQyxHQUFULEVBQWNDLEdBQWQsRUFBbUI7QUFDdkMsUUFBTUMsS0FBSyxHQUFJLGdGQUErRUYsR0FBRyxDQUFDRyxJQUFKLENBQVNNLFFBQVMsT0FBTVQsR0FBRyxDQUFDRyxJQUFKLENBQVNPLFFBQVMsT0FBTVYsR0FBRyxDQUFDRyxJQUFKLENBQVNRLElBQUssT0FBTVgsR0FBRyxDQUFDRyxJQUFKLENBQVNTLEtBQU0sTUFBS1osR0FBRyxDQUFDRyxJQUFKLENBQVNVLEdBQUksR0FBbk07QUFDQXpCLEVBQUFBLEVBQUUsQ0FBQ2MsS0FBSCxDQUFTQSxLQUFULEVBQWdCLENBQUNLLEdBQUQsRUFBTUMsTUFBTixLQUFpQjtBQUMvQixRQUFHRCxHQUFILEVBQVE7QUFBRSxZQUFNQSxHQUFOO0FBQVk7O0FBQ3RCWixJQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWVksTUFBWjtBQUNELEdBSEQ7QUFJRCxDQU5EO0FBUUF2QixHQUFHLENBQUM2QixNQUFKLENBQVc1QixJQUFYLEVBQWlCLE1BQU07QUFDckJTLEVBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFhLGdCQUFlVixJQUFLLEVBQWpDO0FBQ0QsQ0FGRCIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IGV4cHJlc3MgPSByZXF1aXJlKCdleHByZXNzJyk7XG5jb25zdCBhcHAgPSBleHByZXNzKCk7XG5jb25zdCBwb3J0ID0gMzAwMDtcbmNvbnN0IHBhdGggPSByZXF1aXJlKCdwYXRoJyk7XG5cbmNvbnN0IGRiID0gcmVxdWlyZSgnLi4vZGIvY29ubmVjdGlvbi5qcycpXG5cbmFwcC51c2UoZXhwcmVzcy5zdGF0aWMoJ2NsaWVudCcpKTtcblxuY29uc3QgbG9nZ2VyID0gKHJlcXVlc3QsIHJlc3BvbnNlLCBuZXh0KSA9PiB7XG4gIGNvbnNvbGUubG9nKGBSZWNlaXZpbmcgcmVxdWVzdCB0byAke3JlcXVlc3QudXJsfSB3aXRoIG1ldGhvZCAke3JlcXVlc3QubWV0aG9kfWApXG4gIG5leHQoKTtcbn1cblxuYXBwLnVzZSgnLycsIGxvZ2dlcik7XG5cblxuYXBwLnBvc3QoJy91c2VycycsXG4gIGZ1bmN0aW9uKHJlcSwgcmVzKSB7XG4gICAgY29uc29sZS5sb2coJ3JlcTogJywgcmVxKTtcbiAgICBjb25zb2xlLmxvZygncmVzOiAnLCByZXMpO1xuICAgIGNvbnN0IHF1ZXJ5ID0gYElOU0VSVCBJTlRPIHVzZXJzIChuYW1lLCBlbWFpbCwgcGFzc3dvcmQpIFZBTFVFUyAoJyR7cmVxLmJvZHkubmFtZX0nLCAnJHtyZXEuYm9keS5lbWFpbH0nLCAnJHtyZXEuYm9keS5wYXNzd29yZH0nKWA7XG5cbiAgICBkYi5xdWVyeShxdWVyeSwgKGVyciwgcmVzdWx0KSA9PiB7XG4gICAgICBpZiAoZXJyKSB7IHRocm93IGVycjsgfVxuICAgICAgY29uc29sZS5sb2cocmVzdWx0KTtcbiAgICB9KVxufSlcblxuYXBwLnBvc3QoJy9zaGlwcGluZycsIGZ1bmN0aW9uKHJlcSwgcmVzKSB7XG4gIGNvbnN0IHF1ZXJ5ID0gYElOU0VSVCBJTlRPIHNoaXBwaW5nSW5mbyAoYWRkcmVzczEsIGFkZHJlc3MyLCBjaXR5LCBzdGF0ZSwgemlwQ29kZSkgVkFMVUVTICgnJHtyZXEuYm9keS5hZGRyZXNzMX0nLCAnJHtyZXEuYm9keS5hZGRyZXNzMn0nLCAnJHtyZXEuYm9keS5jaXR5fScsICcke3JlcS5ib2R5LnN0YXRlfScsICR7cmVxLmJvZHkuemlwfSlgXG4gIGRiLnF1ZXJ5KHF1ZXJ5LCAoZXJyLCByZXN1bHQpID0+IHtcbiAgICBpZihlcnIpIHsgdGhyb3cgZXJyOyB9XG4gICAgY29uc29sZS5sb2cocmVzdWx0KTtcbiAgfSlcbn0pXG5cbmFwcC5saXN0ZW4ocG9ydCwgKCkgPT4ge1xuICBjb25zb2xlLmxvZyhgTGlzdGVuaW5nIG9uICR7cG9ydH1gKVxufSkiXX0=